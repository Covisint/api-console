  #%RAML 0.8
  title: Service Package Request Decision API
  baseUri: http://api.covisintlabs.com/service/v1
  protocols: [HTTPS]

  traits:
    - secured:
        usage: Apply this to any method that needs to be secured
        description: Requests requires authentication
        headers:
          Authorization:
            description: Access token that is obtained from the api authentication service
            pattern: ^Bearer .*$
            required: true
        responses:
          401:
            description: Unauthorized request
            
    -  postResponse:
        responses:
          406: &406
            description: Unable to produce content of specified 'Accept' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to produce content of type {acceptMediaType}
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
          
          415?: &415
            description: Unable to consume content of specified 'Content-Type' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to consume content of type {contentMediaType}
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema   
                   
          500: &500
            description: An unknown server error occurred
            # substatus codes and error messages are mentioned below:
              # framework:unknown
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema         
      
            
  /requests/tasks/approve:
    is: [secured]
    description: endpoint used to approve package requests for person requestors.
    post:
      is: [postResponse]
      description: Approve a package request.
      headers:
      queryParameters:
        requestId:  
          description: the request id.
          type: string
          maxLength: 36
          required: true
        justification:  
          description: optional justification for the decision.
          type: string
          maxLength: 1000
          required: false
      responses:
        202:
          description: The approval decision was accepted and will be processed accordingly.  No response entity body.
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:header:missing - Missing request header: {headerName}
          # service.request.id.not.found- Could not find request id {requestId}
          # service.request.unsupported.requestor.type - Service package requests for persons are supported.  Other requestor types (organizations) are not supported.
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
              
  /requests/tasks/deny:
    is: [secured]
    description: endpoint used to reject package requests for person requestors.
    post:
      is: [postResponse]
      description: Deny a package request.
      headers:
      queryParameters:
        requestId:  
          description: the request id.
          type: string
          maxLength: 36
          required: true
        justification:  
          description: optional justification for the denial.
          type: string
          maxLength: 1000
          required: false
      responses:
        202:
          description: The denial decision was accepted and will be processed.  No response entity body.
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:header:missing - Missing request header: {headerName}
          # service.request.id.not.found- The service request does not exist.
          # service.request.unsupported.requestor.type - Service package requests for persons are supported.  Other requestor types (organizations) are not supported.
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema              
