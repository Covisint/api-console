  #%RAML 0.8
  title: Package API
  baseUri: http://api.covisintlabs.com/service/v1
  protocols: [HTTPS]
  
  schemas:
    
    - package: |
        {
          "id" : "http://api.covisint.com/schema/service",
          "$schema" : "http://json-schema.org/draft-04/schema",
          "type" : "object",
          "description" : "Schema representing a package resource.",
          "extends" : {
                "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
          },
          "properties" : {
            "id": {
             "maxLength" : 15
            }, 
            "version": {
              "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
            },
            "owningOrganization": {
              "description": "The organization that owns this package.",
              "$ref": "http://api.covisint.com/schema/resourceReference#"
            },
            "parent": {
              "description": "The parent package.  Used to create a package hierarchy.",
              "$ref": "http://api.covisint.com/schema/resourceReference#"
            },
            "codeRestrictions": {
              "type": "object",
              "description": "Indicates whether site/location code(s) must be specified when requesting/granting this package.",
              "properties": {
                "requestorType": {
                  "type": "string",
                  "enum": [ "person", "organization" ],
                  "required": true
                },
                "restriction": {
                  "type": "string",
                  "enum": [ "site", "location" ],
                  "required": true
                }
              }
            },
            "termsAndConditions": {
              "type": "array",
              "minItems": 1,
              "items": {
              "type": "object",
                "properties": {
                  "type": { 
                    "type": "string", 
                    "enum": [ "person", "organization" ],
                    "description": "The target entity of the terms and conditions."
                  },
                  "tacId": {
                    "type": "string", 
                    "description": "The identifier of the T&C record.",
                    "required": true,
                    "maxLength": 36
                  }
                }
              }
            },
            "protected": {
              "type": "boolean",
              "description": "Indicates whether this package is synced back to cleartrust entitlements server, and therefore protected by the ct web agent."
            },
            "requestable": {
              "type": "boolean",
              "description": "Indicates whether this package may be requested by persons or organizations."
            },
            "grantable": {
              "type": "boolean",
              "description": "Indicates whether this package may be granted to persons or organizations."
            },                                    
            "name" : {
              "type" : "array",
              "description": "Internationalized package names.",
              "required": true,
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "lang": { "type": "string", "maxLength": 10 },
                  "text": { "type": "string", "maxLength": 2000 }
                }
              }
            },
            "category" : {
              "type" : "array",
              "description": "Internationalized category names.",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "lang": { "type": "string", "maxLength": 10 },
                  "text": { "type": "string", "maxLength": 2000 }
                }
              }
            }
          }
        }
     
  traits:
    - secured:
        usage: Apply this to any method that needs to be secured
        description: Requests requires authentication
        headers:
          Authorization:
            description: Access token that is obtained from the api authentication service
            pattern: ^Bearer .*$
            required: true
        responses:
          401:
            description: Unauthorized request
            
    - getResponse:
        responses:
          404: &404
            description: The URI requested is invalid or the resource requested does not exist.
            # substatus codes and error messages are mentioned below:
              # (If a resource id is a URI parameter) framework:resource:missing - A resource with the following ID was not found: {resourceId}
              # No message for an invalid URI
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                        
          406: &406
            description: Unable to produce content of specified 'Accept' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to produce content of type {acceptMediaType}
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
          
          500: &500
            description: An unknown server error occurred
            # substatus codes and error messages are mentioned below:
              # framework:unknown
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                  
    
    -  postResponse:
        responses:
          406?: *406
          415?: &415
            description: Unable to consume content of specified 'Content-Type' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to consume content of type {contentMediaType}
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema   
                   
          500: *500
      
    -  deleteResponse:
        responses:
          404: *404
          500: *500
    
    -  putResponse:
        responses:
          406: *406
          409:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:resource:conflict
            # framework:resource:conflict:id - The ID of the resource in the request, {requestedId}, does not match the ID of the given resource, {resourceId}
            # framework:resource:conflict:version - The version of the provided resource, {requestVersion}, does not match the current version of the resource, {latestVersion}
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
          415: *415
          500: *500
              
                  
  /packages:
    is: [secured]
    description: collection endpoint for package resources
    get:
      is: [getResponse]
      description: Performs a search for package resources.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.v1+json.
          type: string
          required: true
      queryParameters:
        name: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 36
          required: false
        category: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 36
          required: false
        owningOrganizationId: 
          description: Filter packages by the id of the owning organization.
          type: string
          maxLength: 36
          required: false
        parentPackageId: 
          description: Filter packages by the id of their parent package.
          type: string
          maxLength: 36
          required: false
        sortBy:
          description: Sort the search results.
          type: string
          required: false
          enum: [ "creation" ]
      responses:
        200:
          description: All packages that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.package.v1+json:
              schema: package
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    /{id}:
      description: individual resource endpoint for packages. 
      uriParameters:
        id:
          displayName: unique package identifier
          description: id of the package
          type: string
          maxLength: 36
          required: true
      is: [secured]
      
      get:
        is: [getResponse]
        description: Returns the package by its id.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The package was successfully retrieved
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      put:
        is: [putResponse]
        description: Updates a package, creating one when it doesn't exist.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.v1+json:
            schema: package
        responses:
          200:
            description: The package was successfully updated
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                
      post:
        is: [postResponse]
        description: Creates a new package.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.v1+json:
            schema: package
        responses:
          200:
            description: The package was successfully created
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]            
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
      /services:   
        description: collection endpoints for the services that are members of this package.
        is: [secured]
        
        get:
          is: [getResponse]
          description: get the services that are members of this package.
          headers:
            Accept:
              description: Media type.
              example: application/vnd.com.covisint.platform.service.v1+json.
              type: string
              required: true
          responses:
            200:
              description: the services were successfully retrieved.
              body:
                application/vnd.com.covisint.platform.service.v1+json:
                  schema: service
            400:
              description: There was a problem with the client's request
              # substatus codes are mentioned below:
              # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
        /{id}:
          description: used to add and remove service membership from a package.
          uriParameters:
            id:
              displayName: service identifier
              description: id of the service
              type: string
              maxLength: 36
              required: true
          is: [secured]
      
          put:  
            is: [putResponse]
            description: Adds the service into the package.
            headers:
            responses:
              204:
                description: The service was successfully added to the package.
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                body:
                  application/vnd.com.covisint.error.v1+json:
                    schema: errorResponseSchema
                  
          delete:
            is: [deleteResponse]
            description: Removes the service from the package.
            headers:
            responses:
              204:
                description: The service was successfully removed from the package.
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                body:
                  application/vnd.com.covisint.error.v1+json:
                    schema: errorResponseSchema
