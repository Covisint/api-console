#%RAML 0.8
title: OAuth API
baseUri: https://api.covisintlabs.com/oauth/v1
#baseUri: http://localhost:10001/oauth/v1
protocols: [HTTPS]
securitySchemes:
  - basic:
      type: Basic Authentication 

schemas:
#common-schema
# ---------------------------------------------------------------------------------------------------------------- Start Common Schema
  - resourceReference: |
       {
         "id" : "http://api.covisint.com/schema/resourceReference",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "description" : "Schema representing links",
         "type" : "object",
         "properties" : {
           "id" : {
             "type" : "string",
             "maxLength" : 36,
             "description" : "The unique identifier for the resource.",
             "required": true
           },
           "type" : {
             "type" : "string",
             "description" : "The type of the resource."
           },
           "realm" : {
             "type" : "string",
             "description" : "The realm of the resource."
           }
         }
       }
       
  - resource: |
       {
         "id" : "http://api.covisint.com/schema/resource",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "description" : "Core schema",
         "definitions" : {
           "resource" : {
             "id" : "resource",
             "type" : "object",
             "description" : "A basic resource.",
             "properties" : {
               "id" : {
                 "type" : "string",
                 "maxLength" : 64,
                 "description" : "The unique identifier for this resource.",
                 "required": true
               },
               "version": {
                 "type" : "number",
                 "minimum" : 0,
                 "maximum" : 9223372036854775807,
                 "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests.",
                 "required": false
               },
               "creator" : {
                 "type" : "string",
                 "maxLength" : 64,
                 "description" : "The creator of this resource. This is mandatory if x-requestor header is NOT available",
                 "required": false
               },
               "creatorAppId" : {
                 "type" : "string",
                 "maxLength" : 64,
                 "description" : "The application id of the creator of this resource.",
                 "required": false
               },
               "creation" : {
                 "type" : "number",
                 "minimum" : 0,
                 "maximum" : 9223372036854775807,
                 "description" : "If this value is provided in a POST / PUT request body, it will be ignored and system will generate value as time, in milliseconds since the epoch, when this resource was created or upda",
                 "required": false            
               }
             }
           }
         }
       }
       
  - realmScopedResource : |
       {
         "id" : "http://api.covisint.com/schema/realmScopedResource",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "type" : "object",
         "description" : "Expands on the base resource and adds a realm attribute.",
         "extends" : {
               "$ref" : "http://api.covisint.com/schema/resource#"
         },
         "properties" : {
           "realm" : {
             "type" : "string",
             "maxLength" : 16,
             "pattern" : "^[A-Za-z0-9]{2,25}$",
             "description" : "The realm in which this resource is being created. This is mandatory if x-realm header is NOT available",
             "required": false
           }
         }
       }
       
  - errorResponseSchema: |
       {
         "id" : "http://api.covisint.com/schema/errorResponseSchema",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "type" : "object",
         "description" : "Representation of an HTTP 4xx/5xx error response.",
         "properties" : {
           "status" : { 
             "type" : "number",
             "minimum" : 400,
             "maximum" : 599,
             "description" : "The HTTP status code.",
             "required": true
           },
           "apiMessage" : { 
             "type" : "string",
             "description" : "A helpful, human-readable description of the error, useful for basic diagnostics." 
           },
           "apiStatusCode" : {
             "type" : "string",
             "description" : "The API-specific status code."
           }

         }
       }
  
  - serviceCode: |
       {
         "id" : "http://api.covisint.com/schema/serviceCodes",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "type": "object",
         "description": "The site/service/location codes granted along with a service.",
         "properties": {
           "code": { "type": "string", "required": true, "maxLength": 200, "description": "The code value." },
           "codeKind": { "type": "string", "required": true, "maxLength": 36, "description": "The associated business unit." }
         }
       }     

  - serviceCodes : |
       {
         "type" : "array",
         "description" : "The site/service/location codes granted along with the service, if any.",
         "items" : { "$ref" : "http://api.covisint.com/schema/serviceCode#"},
         "required": false
       }

  - address: |
       {
         "id" : "http://api.covisint.com/idm/schema/address",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "type" : "object",
         "description" : "A container for the subject's address elements.",
         "properties" : {
           "type" : "string",
           "streets" : {
               "type" : "array",
               "description" : "An array of address streets (i.e. address line 1, 2, 3).",
               "minItems" : 0,
               "items" : {
                 "type": "string",
                 "maxLength" : 255
               }
             },
             "city" : { "type" : "string", "maxLength" : 60, "description" : "The city name." },
             "state" : { "type" : "string", "maxLength" : 60, "description" : "The state/province name or code." },
             "postal" : { "type" : "string", "maxLength" : 10, "description" : "The postal or zip code." },
             "country" : { "type" : "string", "minLength" : 2, "maxLength" : 3, "description" : "The ISO country code. http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"}
         }
       }
       
  - phone : |
       {
         "id" : "http://api.covisint.com/idm/schema/phone",
         "$schema" : "http://json-schema.org/draft-04/schema",
         "type" : "object",
           "description" : "A container for phone number details.",
           "properties" : {
             "number" : { "type" : "string","maxLength" : 100, "description" : "The phone number." },
             "type" : { "enum" : [ "main", "mobile", "fax" ], "description" : "The phone number type." }
           },
           "required" : [ "type" ]
       }             

# -------------------------------------------------------------------------------------------------------------------------------- End Common Schema

  - subject: |
      {
        "id" : "http://api.covisint.com/schema/subject",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a subject.",
        "extends" : {
              "$ref" : "realmScopedResource"
        }
      }
  - grantType: |
      {
        "id" : "http://api.covisint.com/schema/grantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "type": {
            "type" : "string",
            "maxLength": "64",
            "description": "Grant type value(client_credentials or certificate).",
            "required": true
          },
          "subjectId": {
            "type" : "string",
            "maxLength": "64",
            "description": "The subject.",
            "required":true
          },
          "applicationId": {
            "type" : "string",
            "maxLength": "64",
            "description": "The application id of subject",
            "required":true
          }
        }
      }
  - clientSecretGrantType: |
      {
        "id" : "http://api.covisint.com/schema/clientSecretGrantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a client secret grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/grantType#"
        },
        "properties" : {
          "clientSecret" : {
            "type" : "string",
            "maxLength": "128",
            "description": "Client secret.",
            "required": true
          }
        }
      }
  - certificateGrantType: |
      {
        "id" : "http://api.covisint.com/schema/certificateGrantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a client secret grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/grantType#"
        },
        "properties" : {
          "publicKey" : {
            "type" : "string",
            "maxLength": "2048",
            "description": "Public key for the resource.",
            "required": true
          }
        }
      }

  - token: |
      {
        "id" : "http://api.covisint.com/schema/token",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a token for a subject grant type.",
        "properties" : {
             "creation" : {
             "description": "Epoch creation time, in milliseconds.",
             "required": true
          },
          "access_token" : {
            "type" : "string",
            "description": "Access token string.",
            "required": true
          },
          "expires_in" : {
            "type" : "string",
            "description": "Access token lifetime, in seconds.",
            "required": true
          },
          "token_type" : {
            "type" : "string",
            "description": "Access token type. Only bearer type is currently supported.",
            "required": true
          }
        }
      }

  - subject: |
      {
        "id" : "http://api.covisint.com/schema/subject",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a subject.",
        "extends" : {
              "$ref" : "realmScopedResource"
        }
      }
  - grantType: |
      {
        "id" : "http://api.covisint.com/schema/grantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "type": {
            "type" : "string",
            "maxLength": "64",
            "description": "Grant type value(client_credentials or certificate).",
            "required": true
          },
          "subjectId": {
            "type" : "string",
            "maxLength": "64",
            "description": "The subject.",
            "required":true
          },
          "applicationId": {
            "type" : "string",
            "maxLength": "64",
            "description": "The application id of subject",
            "required":true
          }
        }
      }
  - clientSecretGrantType: |
      {
        "id" : "http://api.covisint.com/schema/clientSecretGrantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a client secret grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/grantType#"
        },
        "properties" : {
          "clientSecret" : {
            "type" : "string",
            "maxLength": "128",
            "description": "Client secret.",
            "required": true
          }
        }
      }
  - certificateGrantType: |
      {
        "id" : "http://api.covisint.com/schema/certificateGrantType",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a client secret grant type.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/grantType#"
        },
        "properties" : {
          "publicKey" : {
            "type" : "string",
            "maxLength": "2048",
            "description": "Public key for the resource.",
            "required": true
          }
        }
      }

  - token: |
      {
        "id" : "http://api.covisint.com/schema/token",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a token for a subject grant type.",
        "properties" : {
             "creation" : {
             "description": "Epoch creation time, in milliseconds.",
             "required": true
          },
          "access_token" : {
            "type" : "string",
            "description": "Access token string.",
            "required": true
          },
          "expires_in" : {
            "type" : "string",
            "description": "Access token lifetime, in seconds.",
            "required": true
          },
          "token_type" : {
            "type" : "string",
            "description": "Access token type. Only bearer type is currently supported.",
            "required": true
          }
        }
      }
traits:
#common-traits
# -------------------------------------------------------------------------------------------------------------------- Start Common Traits
  - secured:
      usage: Apply this to any method that needs to be secured
      description: Requests requires authentication using a bearer token.
      headers:
        Authorization:
          description: Access token that is obtained from the /token endpoint of the oauth API.
          pattern: ^Bearer .*$
          example: Bearer ZCtYUGpYRXpET0JvVE1rZzlWV3I1Yk
          required: true
      responses:
        401: &401
          description: Unauthenticated request.  This is returned if the access token is missing, invalid, or expired.  Access tokens are obtained through the /token endpoint of the Oauth API.
          body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
        403: &403
          description: Unauthorized request.  The requestor is not authorized to perform the requested operation.  
          body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
  - getResponse:
        responses:
          404: &404
            description: The URI requested is invalid or the resource requested does not exist.
            # substatus codes and error messages are mentioned below:
            # (If a resource id is a URI parameter) framework:resource:missing - A resource with the following ID was not found: {resourceId}
            # No message for an invalid URI
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                        
          406: &406
            description: Unable to produce content of specified 'Accept' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to produce content of type {acceptMediaType}
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
          
          500: &500
            description: An unknown server error occurred
            # substatus codes and error messages are mentioned below:
              # framework:unknown
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                  
  -  postResponse:
        responses:
          406: *406
          415: &415
            description: Unable to consume content of specified 'Content-Type' media type
            # substatus codes and error messages are mentioned below:
              # framework:request:unsupported:mediatype - The server is unable to consume content of type {contentMediaType}
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema   
                   
          500: *500
  -  deleteResponse:
        responses:
          404: *404
          406: *406
          500: *500
  -  putResponse:
        responses:
          404: *404
          406: *406
          409: &409
            description: There is a conflict in identifying the resource being acted on.  There are two categories.  (1) The unique identifier in the URL and in the body are different.  (2) The current version of the resource being updated and the version sent in the body of the request. This may be an indication that the resource has changed since the client loaded it. The conflict should be resolved and the update resubmitted with the current version of the resource.
            # framework:resource:conflict
            # framework:resource:conflict:id - The ID of the resource in the request, {requestedId}, does not match the ID of the given resource, {resourceId}
            # framework:resource:conflict:version - The version of the provided resource, {requestVersion}, does not match the current version of the resource, {latestVersion}
            body:      
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema   
          415: *415
          500: *500

# --------------------------------------------------------------------------------------------------------------- End Common Traits

/token:
  securedBy: [basic]
  description: Collection endpoint for Token resources
  post:
    is: [postResponse]
    description: Create token for a subject grant type (e.g., client credentials of client id and client secret). The token can be used for bearer-type authentication in other API calls.
    headers:
      Authorization:
        description: Basic authorization, using the client id and client secret issued during application provisioning.  To use the API console switch the Security Scheme to Basic Authentication and enter the client id in the Username field and client secret in the Password field.  This will set the Authorization header properly.
        pattern: ^Basic .*$
        example: Basic aWQ6cGFzc3dvcmQ=
        required: true    
      Accept:
        description: Media type.
        example: application/vnd.com.covisint.platform.oauth.token.v1+json
        type: string
        required: true
      type:
        description: Subject grant type. Curently supported value is "client_credentials".
        example: client_credentials
        type: string
        required: true
      application-id:
        description: The unique identifier of the application making the token request.  This must match the application id attached to the grant assiciated with the client id and client secret provided in the Authorization header. 
        type: string
        required: true
    body:
    responses:
      200:
          description: Successfully created and returned token. This token is used in a Bearer-type Authorization header for authentication to all other API calls.
          body:
            application/vnd.com.covisint.platform.oauth.token.v1+json:
              schema: token
      401:
        description: Unauthorized request. This is returned if the client id and/or client secret is not valid. 
        body: 
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema   
        #error messages are mentioned below :
          # No grant type information found. Allowed values: client_credentials.
          # Unable to find AbstractGrantType type.
          # Unable to find AbstractGrantType builder for class type.
          # Provided grant type information cannot be authenticated.
          # Unable to authenticate user.Error Message: No authentication client defined.
          # Unable to authenticate user.Error Message: No user information provided.
      
      400:
        description: There was a problem with the client's request
        # substatus codes and error messages are mentioned below:
        # framework:request
        # framework:request:io
        # framework:request:io:read - 
        # framework:request:io:read:parsing
        # framework:request:io:write
        # framework:request:header:missing - Missing request header: {headerName}
        # framework:request:param:missing - Missing request parameter: {queryParameterName}
        # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
        # person.request.invalid.searchParams - Searching for registrants across different realms is not allowed
        # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
        body:
          application/vnd.com.covisint.error.v1+json:
            schema: errorResponseSchema 

