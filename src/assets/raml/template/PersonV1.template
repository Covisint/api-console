#%RAML 0.8
title: Person API
baseUri: https://api.covisintlabs.com/person/v1
protocols: [HTTPS]

# ************************* The content of resource.raml starts here *****************************
schemas:
#common-schema
        
  - person: |
      {
        "id" : "http://api.covisint.com/idm/schema/person/v1",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "A representation of a person, according to the application/vnd.com.covisint.platform.person.v1+json media type.",
        "extends" : {
          "$ref" : "http://api.covisint.com/idm/schema/realmScopedResource#"
        },
        "properties" : {
          "id": {
             "maxLength" : 100
          },
         "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "status" : { 
            "enum" : [ "pending", "rejected", "active", "suspended", "inactive", "locked", "expired", "unactivated", "preterminated" ], 
            "description" : "The person's account status.  Statuses can be changed through tasks; value is ignored on POST or PUT requests."
          },
          "name" : {
            "type" : "object",
            "description" : "A container for the person's name elements",
            "properties" : {
              "prefix" : {
                "type" : "string",
                "description" : "The prefix to the person's name. For example: Mr., Mrs., Rev.",
                "maxLength" : 100,
                "required": false
              },
              "given" : {
                "type" : "string",
                "description" : "The person's given (first) name.",
                "maxLength" : 150,
                "required": true
              },
              "middle": {
                "type" : "string",
                "description" : "The person's middle name(s).",
                "maxLength" : 60,
                "required": false
              },
              "surname": {
                "type" : "string",
                "description" : "The person's surname or family name.",
                "maxLength" : 150,
                "required": true
              },
              "suffix" : {
                "type" : "string",
                "description" : "The person's name suffix. For example: Jr., Ph.D., M.D.",
                "maxLength" : 60,
                "required": false
              }         
            },
            "required": true
          },
          "addresses" : {
            "type" : "array",
            "description" : "A container for the person's addresses.",
            "minItems" : 0,
            "items" : { "ref" : "http://api.covisint.com/idm/schema//address#" },
            "required": false
          },
          "language" : { 
            "type" : "string", 
            "maxLength" : 2, 
            "description" : "The person's preferred language. Should be in ISO 639-1 format.",
            "required": true
          },
          "timezone" : { 
            "type" : "string", 
            "description" : "The person's preferred timezone.  Must be one of java.util.TimeZone#getAvailableIDS.",
            "required": true
          },
          "phones" : {
            "type" : "array",
            "description" : "A container for the person's phone number(s).",
            "minItems" : 0,
            "items" : { "$ref" : "http://api.covisint.com/idm/schema/phone#" },
            "required": false
          },
          "title" : { 
            "type" : "string", 
            "maxLength" : 60, 
            "description" : "Person's Job Title",
            "required": false
          },
          "email" : {
            "type" : "string",
            "maxLength" : 1000, 
            "description" : "The person's email address.",
            "required": true
          },
          "organizationId" : {
            "type" : "string",
            "description" : "The Organization's id",
            "required" : true
          },
          "currency" : { 
            "type" : "string", 
            "maxLength" : 10, 
            "description" : "Person's preferred currency.  Must be a valid ISO 4217 currency code.",
            "required": false
          }
        }
      }
        
  - passwordAccount-v1: |
      {
        "id" : "http://api.covisint.com/idm/schema/passwordAccount/v1",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "A representation of a password account.",
        "extends" : {
          "$ref" : "http://api.covisint.com/idm/schema/realmScopedResource#"
        },
        "properties" : {
          "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored."
          },
          "username" : {
            "type" : "string", 
            "maxLength" : 100,
            "description" : "The username on the account.  This is typically what the user enters into the login box when authenticating.",
            "required" : "true"
          },
          "password" : { 
            "type" : "string", 
            "description" : "The account password."
          },
          "passwordPolicyId" : { 
            "type" : "string", 
            "description" : "The unique identifier for the password policy governing the password.",
            "required": true
          },
          "authenticationPolicyId" : { 
            "type" : "string", 
            "description" : "The unique identifier for the authentication policy governing the password.",
            "required": true
          },
          "expiration" : { 
            "type" : "number", 
            "description" : "The time, in milliseconds since the epoch, when the password expires."
          },
          "locked" : {
            "type" : "boolean",
            "description" : "Whether or not the account is locked."
          },
          "unlockInstant" : { 
            "type" : "number", 
            "description" : "The time, in milliseconds since the epoch, when the account will be unlocked.  Will be zero if the account is not locked via a time-based mechanism."
          }
        }
      }

  - personInvitation: |
      {
        "id" : "http://api.covisint.com/schema/personInvitation",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing an invitation for a person to register.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {   
          "version": {
              "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },         
          "email" : {
            "type" : "string",
            "description": "The email address that is to receive the invitation.",
            "maxLength": 500,
            "required": true
          },
          "invitor": { 
            "description": "The person that is sending the invitation.",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },                           
          "invitee": { 
            "description": "An unactivated person that is to be used during the registration initiated by this invitation.  This is an optional way to prepopulate user attributes at invitation time.",
            "$ref": "http://api.covisint.com/schema/resourceReference#"
          },   
          "targetOrganization": { 
            "description": "Organization that the person will join as a result of the registration initiatied by this invitation.",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },
          "invitationCode" : {
            "type" : "string",
            "description": "A system-generated invitation code.  This can aid in verification for systems requiring a secured invitation process.",
            "maxLength": 500
          }                                      
        }
      }
        
  - personRequest: |
      {
        "id" : "http://api.covisint.com/schema/personRegistration",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a registration of a person.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "version": {
              "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "registrant": { 
            "description": "The person that is being registered.  The person must be in pending status for the request to be valid.",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },
          "justification" : {
            "type" : "string",
            "description": "The justification for the registration.",
            "maxLength": 1000,
            "required": true
          },
          "servicePackageRequest": { 
            "properties": {
              "packageId": { "type": "string", "required": true, "maxLength": 200, "description": "The unique service package identifier for the service package being requested at time of registration." },
              "code": { "type": "string", "required": false, "maxLength": 50, "description": "The code associated with the requested service package.  To be specified if required by the service package." },
              "codeKind": { "type": "string", "required": false, "maxLength": 36, "description": "The kind of code.  Only applicable if code is provided.  This field is also known as business unit." }
            },
            "required": true
          }
        }
      }
      
    
traits:
#common-traits
                  
# **************** The Content of resource.raml ends here *********************************
          
/persons:
  is: [secured]
  get:
    is: [getResponse]
    description: Returns a collection of person objects
    headers:
        Accept:
          description: Media type for person.
          example: application/vnd.com.covisint.platform.person.v1+json
          type: string
          required: true
    queryParameters:
      id: 
        description: Retrieve person for a supplied person identifier. 
        type: string
        required: false
    responses:
      200:
          description: All person resources were successfully retrieved.
          body:
            application/vnd.com.covisint.platform.person.v1+json:
              schema: person
      400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # person.invalid.searchParams - Searching for persons across different realms is not allowed
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]  
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
              
  post:
    is: [postResponse]
    description: Creates a new person in unactivated status.
    headers:
        Content-type:
          description: Media type for person.
          example: application/vnd.com.covisint.platform.person.v1+json
          type: string
          required: true
        Accept:
          description: Media type for person.
          example: application/vnd.com.covisint.platform.person.v1+json
          type: string
          required: true
    body:
      application/vnd.com.covisint.platform.person.v1+json:
        schema: person 
    responses:
      201:
        description: A new person was created in unactivated status and is returned in the response body.
        body:
          application/vnd.com.covisint.platform.person.v1+json:
            schema: person
      400:
          description: There was a problem with the client's request
           # substatus codes and error messages are mentioned below:
           # substatus codes and error messages are mentioned below:
           # framework:request
           # framework:request:io
           # framework:request:io:read
           # framework:request:io:read:parsing
           # framework:request:io:write
           # framework:request:header:missing - Missing request header: {headerName}
           # framework:request:param:missing - Missing request parameter: {queryParameterName}
           # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
           # user.invalid.orgainzation.id - Target organization id {organizationId} does not exist.
           # user:request:invalid:language - Unsupported language: {languageCode}
           # user:request:invalid:timezone - Unsupported timezone: {timeZone}
           # user:request:invalid:currency - Unsupported currency: {currencyCode}
           # user:request:invalid:phone:type - Unsupported Phone type: {phoneType(s)}
           # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
           # framework:resource:data:illegal - The following information was illegal from the resource:  {fieldSpecificError(s)}
           # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
              
  /{personId}:
    description: The endpoint for a specific person.
    uriParameters:
      personId:
        description: The person's unique identifier.
        type: string
        required: true
    is: [secured]
    get:
      is: [getResponse]
      description: Returns a single person representation
      headers:
        Accept:
          description: Media type for person.
          example: application/vnd.com.covisint.platform.person.v1+json
          type: string
          required: true
      responses:
        200:
          description: The person resource was successfully retrieved
          body:
            application/vnd.com.covisint.platform.person.v1+json:
              schema: person
              example: |
                {
                    "id": "TESTUSER",
                    "version": 1397188800000,
                    "creator": "TESTUSER",
                    "realm": "PROD",
                    "status": "active",
                    "name": {
                        "prefix": "Mr.",
                        "given": "John",
                        "middle": "M",
                        "surname": "Smith",
                        "suffix": "Sr."
                    },
                    "addresses": [
                        {
                            "streets": [
                                "1 Main Street",
                                "Suite 200",
                                "c/o Ann Miller"
                            ],
                            "city": "Detroit",
                            "state": "MI",
                            "postal": "48303",
                            "country": "US",
                            "type": "main"
                        }
                    ],
                    "language": "en",
                    "timezone": "EST5EDT",
                    "phones": [
                        {
                            "type": "main",
                            "number": "313-288-2562"
                        },
                        {
                            "type": "mobile",
                            "number": "248-767-1572"
                        },
                        {
                            "type": "fax",
                            "number": "248-476-1303"
                        }
                    ],
                    "title": "Security Administrator",
                    "email": "admin@covisint.com",
                    "currency": "USD"
                }
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
    put:
      is: [putResponse]
      description: Updates a person resource's base demographical properties.
      headers:
        Content-type:
          example: application/vnd.com.covisint.platform.person.v1+json
          description: Media type for person.
          type: string
          required: true
        Accept:
          description: Media type for person.
          example: application/vnd.com.covisint.platform.person.v1+json
          type: string
          required: true
      body:
        application/vnd.com.covisint.platform.person.v1+json:
          schema: person
      responses:
        200:
          description: The person resource was successfully updated
          body:
            application/vnd.com.covisint.platform.person.v1+json:
              schema: person
        400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # user:request:invalid:language - Unsupported language: {languageCode}
            # user:request:invalid:timezone - Unsupported timezone: {timeZone}
            # user:request:invalid:currency - Unsupported currency: {currencyCode}
            # user:request:invalid:phone:type - Unsupported Phone type: {phoneType(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
    /accounts:
      is: [secured]
      description: Collection of a person's accounts.      
      get:
        is: [getResponse]
        description: Get all of a person's accounts.         
        headers:
          Accept:
            description: Media type for person's account.
            example: application/vnd.com.covisint.platform.resourceReferences.v1+json
            type: string
            required: true
        responses:
          200:
            description: The references to the accounts were successfully retrieved.  This will be an empty array if no accounts exist.
            body:
              application/vnd.com.covisint.platform.resourceReferences.v1+json:
                schema: resourceReferences
          400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema            

      /password:
        is: [secured]
        description: A person's password account, comprised of a username and password.      
        put:
          is: [putResponse]
          description: Create or update the password account.
          headers:
            Content-type:
              description: Media type for person's password account.
              example: application/vnd.com.covisint.platform.account.password.v1+json
              type: string
              required: true
            Accept:
              description: Media type for person's password account.
              example: application/vnd.com.covisint.platform.account.password.v1+json
              type: string
              required: true
          body:
            application/vnd.com.covisint.platform.account.password.v1+json:
              schema: passwordAccount-v1
          responses:
            200:
              description: The person's password account was successfully created or updated.  If the person was in unactivated status before the request then the person is changed to pending status.
              body:
                application/vnd.com.covisint.platform.account.password.v1+json:
                  schema: passwordAccount-v1
            400:
              description: There was a problem with the client's request
              # substatus codes and error messages are mentioned below:
              # framework:request
              # framework:request:io
              # framework:request:io:read - 
              # framework:request:io:read:parsing
              # framework:request:io:write
              # framework:request:header:missing - Missing request header: {headerName}
              # framework:request:param:missing - Missing request parameter: {queryParameterName}
              # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
              # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
              # add.user.cleartrust.error - Could not add person to cleartrust 
              # invalid.password.error - Password {password} does not conform to policy {passwordPolicy}
              # password.account.update.error - There was an error updating the password account
              body:
                application/vnd.com.covisint.error.v1+json:
                  schema: errorResponseSchema

        get:
          description: Returns the person's password account
          is: [secured, getResponse]
          headers:
            Accept:
              description: Media type for a person password account.
              example: application/vnd.com.covisint.platform.person.account.password.v1+json
              type: string
              required: true
          responses:
            200:
                description: The person's password account was successfully retrieved.
                body:
                   application/vnd.com.covisint.platform.person.account.password.v1+json:
                    schema: passwordAccount-v1
            400:
                description: There was a problem with the client's request
                # substatus codes and error messages are mentioned below:
                # framework:request
                # framework:request:io
                # framework:request:io:read - 
                # framework:request:io:read:parsing
                # framework:request:io:write
                # framework:request:header:missing - Missing request header: {headerName}
                # framework:request:param:missing - Missing request parameter: {queryParameterName}
                # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                # service.invalid.person.account.password - Account for Person {personId} does not exist.
                # password.account.get.error - There was an error getting the password account

  /tasks/activate:
    is: [secured]
    description: Activate a person that is in pending status. A common workflow is (1) POST /person, which creates a person in unactivated status. (2) PUT /person/accounts/password, which adds a password account the person and moves the person to pending status. (3) PUT /tasks/activate, which activates the person and moves the person to active status.
    post:
      is: [postResponse]
      description: Activate a person that is in pending status.     
      headers:
      queryParameters:          
        personId: 
          description: The unique identifier of the person to activate. 
          type: string
          required: true
          maxLength:  36
      responses:
        204:
          description: The person resource was successfully activated.  The person is changed to active status.
        400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # framework:request:invalid:header - Invalid x-requestor header value. The correct format is {requestorType}requestor.
          # framework:request:invalid:header:value - Invalid x-requestor header value.
          # framework:resource:state:transition:unsupported - Unsupported person status transition from {fromState} to ACTIVATE
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
        404:
            description: Resource not found.
            # substatus codes and error messages are mentioned below:
            # framework:resource:missing - A resource with the following ID was not found: {resourceId}    
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema        
          
  /tasks/suspend:
    is: [secured]
    description: Suspend a person that is in active status.      
    post:
      is: [postResponse]
      description: Suspend a person that is in active status.         
      headers:
      queryParameters:          
        personId: 
          description: The unique identifier of the person to suspend. 
          type: string
          required: true
          maxLength:  36   
      responses:
        204:
          description: The person resource was successfully suspended.  The person is changed to suspended status.
        400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # framework:request:invalid:header - Invalid x-requestor header value. The correct format is {requestorType}requestor.
          # framework:request:invalid:header:value - Invalid x-requestor header value.
          # framework:resource:state:transition:unsupported - Unsupported person status transition from {status1} to SUSPEND
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
        404:
            description: Resource not found.
            # substatus codes and error messages are mentioned below:
            # framework:resource:missing - A resource with the following ID was not found: {resourceId}          
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                    
  /tasks/unsuspend:
    is: [secured]
    description: Unsuspend a person that is in suspended status.      
    post:
      is: [postResponse]
      description: Unsuspend a person that is in suspended status.         
      headers:
      queryParameters:          
        personId: 
          description: The unique identifier of the person to unsuspend. 
          type: string
          required: true
          maxLength:  36
      responses:
        204:
          description: The person resource was successfully unsuspended.  The person is changed to active status.
        400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # framework:request:invalid:header - Invalid x-requestor header value. The correct format is {requestorType}requestor.
          # framework:request:invalid:header:value - Invalid x-requestor header value.
          # framework:resource:state:transition:unsupported - Unsupported person status transition from {status1} to UNSUSPEND
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
        404:
            description: Resource not found.
            # substatus codes and error messages are mentioned below:
            # framework:resource:missing - A resource with the following ID was not found: {resourceId}          
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                                        

  /personInvitations:
    is: [secured]
    description: Collection endpoint for person invitation resources
    get:
      is: [getResponse]
      description: Performs a search for person invitations.
      headers:
        Accept:
          description: Media type for person invitation.
          example: application/vnd.com.covisint.platform.person.invitation.v1+json.
          type: string
          required: true
      queryParameters:
        invitorId: 
          description: Only retrieve person invitations for a certain invitor. Currently there is no restriction on number of ids used.
          type: string
          required: false
        inviteeId: 
          description: Only retrives person invitations for a certain invitee. Currently there is no restriction on number of ids used.
          type: string
          required: false
      responses:
        200:
          description: All person invitations that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.person.invitation.v1+json:
              schema: personInvitation
        400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # person.invitation.invalid.combination.queryParamaters - Searching for persons across different realms is not allowed
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]             
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema

                     
    post:
      is: [postResponse]
      description: Creates a new person invitation.
      headers:
        Content-type:
          description: Media type for person invitation.
          example: application/vnd.com.covisint.platform.person.invitation.v1+json.
          type: string
          required: true
        Accept:
          description: Media type for person invitation.
          example: application/vnd.com.covisint.platform.person.invitation.v1+json.
          type: string
          required: true
      body:
        application/vnd.com.covisint.platform.person.invitation.v1+json:
          schema: personInvitation 
      responses:
        201:
          description: A new person invitation was created and is returned in the response body.
          body:
            application/vnd.com.covisint.platform.person.invitation.v1+json:
              schema: personInvitation
        400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # person.invitation.invalid.emailIdFormat - Invalid email id format {emailId}
            # person.invitation.invalid.invitorId - Invitor id {invitorId} does not exist
            # person.invitation.invalid.inviteeId - Invitee id {inviteeId} does not exist
            # person.invitation.invalid.inviteeStatus - Invitee id {inviteeId} is not in UNACTIVATED status.
            # person.invitation.invalid.targetOrganizationId - Target organization id {orgId} does not exist
            # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
            # framework:resource:data:illegal - The following information was illegal from the resource:  {fieldSpecificError(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema             
      
    /{id}:
      description: Endpoint for a specific person invitation.
      uriParameters:
        id:
          description: Unique identifier of the person invitation
          type: string
          maxLength: 36
          required: true
      is: [secured]
      
      get:
        is: [getResponse]
        description: Returns the person invitation by its unique id.
        headers:
          Accept:
            description: Media type for person invitation.
            example: application/vnd.com.covisint.platform.person.invitation.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The person invitation was successfully retrieved
            body:
              application/vnd.com.covisint.platform.person.invitation.v1+json:
                schema: personInvitation                  
          400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                  
      delete:
        is: [deleteResponse]
        description: Deletes a person invitation.
        headers:
          Accept:
            description: Media type for person invitation.
            example: application/vnd.com.covisint.platform.person.invitation.v1+json.
            type: string
            required: false
        responses:
          204:
            description: The person invitation was successfully deleted.
          400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                  
                 
      /servicePackages:
        is: [secured]
        description: Packages associated with an invitation.
        get:
          is: [getResponse]
          description: Returns the service packages associated to an invitation.
          headers:
            Accept:
              description: Media type for service package.
              example: application/vnd.com.covisint.platform.resourceReferences.v1+json.
              type: string
              required: true
          responses:
            200:
              description: The references to the packages were successfully retrieved.  This will be an empty array if no packages exist.
              body:
                application/vnd.com.covisint.platform.resourceReferences.v1+json:
                  schema: resourceReferences
            400:
              description: There was a problem with the client's request
              # substatus codes are mentioned below:
              # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
        /{id}:
          uriParameters:
            id:
              description: Unique identifier of the service
              type: string
              maxLength: 36
              required: true
          is: [secured]
        
          put:  
            is: [putResponse]           
            description: Sets a packages as being part of an invitation.
            headers:
              Content-type:
                description: Media type for service package.
                example: application/vnd.com.covisint.platform.resourceReferences.v1+json.
                type: string
                required: true
              Accept:
                description: Media type for service package.
                example: application/vnd.com.covisint.platform.resourceReferences.v1+json.
                type: string
                required: true
            responses:
              200: 
                description: The service package was successfully added to the invitation.
                body:
                  application/vnd.com.covisint.platform.resourceReference.v1+json:
                    schema: resourceReference
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
          delete:  
            is: [deleteResponse]
            description: Deletes the package from being associated to the invitation.
            headers:
              Accept:
                description: Media type for service package.
                example: application/vnd.com.covisint.platform.resourceReferences.v1+json.
                type: string
                required: false
            responses:
              204: 
                description: The package was successfully deleted from the invitation.          
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          /codes:
            is: [secured]        
            get:
              is: [getResponse]
              description: Returns the service codes associated to a service package associated to an invitation.
              headers:
                Accept:
                  description: Media type for service code.
                  example: application/vnd.com.covisint.platform.service.codes.v1+json.
                  type: string
                  required: true
              responses:
                200:
                  description: The service codes were successfully retrieved.  This will be an empty array if no codes exist.
                  body:
                    application/vnd.com.covisint.platform.service.codes.v1+json:
                      schema: service.codes
                400:
                  description: There was a problem with the client's request
                  # substatus codes are mentioned below:
                  # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            put:  
              is: [putResponse]
              description: Updates the codes for a service package associated to an invitation.
              headers:
                Content-type:
                  description: Media type for service code.
                  example: application/vnd.com.covisint.platform.service.codes.v1+json.
                  type: string
                  required: true
                Accept:
                  description: Media type for service code.
                  example: application/vnd.com.covisint.platform.service.codes.v1+json
                  type: string
                  required: true
              responses:
                200: 
                  description: The service codes were successfully updated.
                  body:
                    application/vnd.com.covisint.platform.service.codes.v1+json:
                      schema: service.codes
                400:
                  description: There was a problem with the client's request
                  # substatus codes are mentioned below:
                  # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                      
            delete:
              is: [deleteResponse]  
              description: Updates the codes for a service associated to an invitation.
              headers:
                Accept:
                  description: Media type for service code.
                  example: application/vnd.com.covisint.platform.service.codes.v1+json.
                  type: string
                  required: false
              responses:
                204: 
                  description: The codes were successfully deleted.       
                400:
                  description: There was a problem with the client's request
                  # substatus codes are mentioned below:
                  # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    /tasks/accept:
      is: [secured]
      description: Task to accept the person invitation.      
      post:
        is: [postResponse]
        description: Accept the person invitation.  This also results in the invitation being deleted.   
        headers:
        queryParameters:          
          inviteId: 
            description: The unique identifier of the invitation being accepted. 
            type: string
            required: true
            maxLength:  36
          createdPersonId: 
            description: The unique identifier of the person created during the registration process that was initiated by the accepted invitation.  This is specified solely for tracking purposes.
            type: string
            required: true
            maxLength:  36
        responses:
              204: 
                description: The invitation was successfully accepted.
              400:
                description: There was a problem with the client's request
                # substatus codes and error messages are mentioned below:
                # framework:request
                # framework:request:io
                # framework:request:io:read - 
                # framework:request:io:read:parsing
                # framework:request:io:write
                # framework:request:header:missing - Missing request header: {headerName}
                # framework:request:param:missing - Missing request parameter: {queryParameterName}
                # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
                # person.invitation.invalid.inviteId - Invite id {inviteId} does not exist
                # person.invitation.invalid.personId - Person id {personId} does not exist
                # person.invitation.multiple.inviteIds.not.allowed - Multiple inviteIds are not allowed.
                # person.invitation.multiple.createdPersonIds.not.allowed - Multiple createdPersonIds are not allowed.
                # person.invitation.conflict.personId - Person id {personId} is not matching with the invited id {inviteeId}.
                # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application] 
                body:
                  application/vnd.com.covisint.error.v1+json:
                    schema: errorResponseSchema         

  /requests:
    is: [secured]
    description: Collection endpoint for person request resources
    get:
      is: [getResponse]
      description: Performs a search for person request.
      headers:
        Accept:
          description: Media type for person request.
          example: application/vnd.com.covisint.platform.person.request.v1+json
          type: string
          required: true
      queryParameters:
        registrantId:
          description: Retrieve person requests for a supplied person identifier. 
          type: string
          required: false
      responses:
        200:
          description: All person requests that satisfy the query parameters were successfully retrieved.  The response collection may be empty.
          body:
            application/vnd.com.covisint.platform.person.request.v1+json:
              schema: personRequest
        400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # person.request.invalid.searchParams - Searching for registrants across different realms is not allowed
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema 
              
    post:
      is: [postResponse]
      description: Creates a new person request.
      headers:
        Content-type:
          description: Media type for person request.
          example: application/vnd.com.covisint.platform.person.request.v1+json.
          type: string
          required: true
        Accept:
          description: Media type for person request.
          example: application/vnd.com.covisint.platform.person.request.v1+json.
          type: string
          required: true
      body:
        application/vnd.com.covisint.platform.person.request.v1+json:
          schema: personRequest 
      responses:
        201:
          description: A new person registration was created and is returned in the response body.
          body:
            application/vnd.com.covisint.platform.person.request.v1+json:
              schema: personRequest
        400:
          description: There was a problem with the client's request
          # substatus codes and error messages are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # person.request.invalid.registrantId - Registrant id {registrantId} does not exist
          # person.request.invalid.person.status - Registrant id {registrantId} is not in PENDING status
          # person.request.invalid.packageId - Package id {packageId} does not exist    
          # person.request.invalid.codeKind - Business unit's code kind {codeKind} does not exist
          # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
          # framework:resource:data:illegal - The following information was illegal from the resource:  {fieldSpecificError(s)}
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema              
      
    /{id}:
      description: Endpoint for a specific person request.
      uriParameters:
        id:
          description: Unique identifier of the person request
          type: string
          maxLength: 36
          required: true
      is: [secured]
      
      get:
        is: [getResponse]
        description: Returns the person request by its unique id.
        headers:
          Accept:
            description: Media type for person request.
            example: application/vnd.com.covisint.platform.person.request.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The person request was successfully retrieved
            body:
              application/vnd.com.covisint.platform.person.request.v1+json:
                schema: personReques
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
      delete:
        is: [deleteResponse]
        description: Deletes a person request.
        headers:
          Accept:
            description: Media type for person request.
            example: application/vnd.com.covisint.platform.person.request.v1+json.
            type: string
            required: false
        responses:
          204:
            description: The person request was successfully deleted.
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body: 
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                                                     
    /tasks/approve:
      is: [secured]
      description: Approve a person request.      
      post:
        is: [postResponse]
        description: Approve a person request.         
        headers:
        queryParameters:          
          requestId: 
            description: The unique identifier of the person request.
            type: string
            required: true
        responses:
          204:
            description: The request was successfully approved.  The person is put into active status.
          400:
            description: There was a problem with the client's request
            # substatus codes and error messages are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:resource:state:transition:unsupported - Unsupported person status transition from {status1} to {status2}
            # framework:request:invalid:header - Invalid x-requestor header value. The correct format is {requestorType}requestor.
            # framework:request:invalid:header:value - Invalid x-requestor header value.
            # person.request.multiple.requestIds.not.allowed - Multiple requestIds are not allowed.
            # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema                

