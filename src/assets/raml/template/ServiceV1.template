  #%RAML 0.8
  title: Service API
  baseUri: https://api.covisintlabs.com/service/v1
  protocols: [HTTPS]
  
  schemas:
#common-schema
        
  - service: |
      {
        "id" : "http://api.covisint.com/schema/service",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a service resource.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "id" : {
            "maxLength" : 15
          },
          "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "name" : {
            "type" : "array",
            "description": "Internationalized service names.",
            "required": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "lang": { "type": "string", "maxLength": 10 },
                "text": { "type": "string", "maxLength": 2000 }
              }
            }
          },
          "parentService": {
            "description": "The parent service.  Used to create a service hierarchy.",
            "$ref": "http://api.covisint.com/schema/resourceReference#"
          },
          "category" : {
            "type" : "array",
            "description": "Internationalized category names.",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "lang": { "type": "string", "maxLength": 10 },
                "text": { "type": "string", "maxLength": 2000 }
              }
            }
          },
          "owningOrganization": {
            "description": "The organization that owns this service.",
            "$ref": "http://api.covisint.com/schema/resourceReference#"
          },
          "urls": {
            "type": "array",
            "minItems": 1,
            "required": true,
            "description": "A listing of all URLs defined for this service, by type.",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string", "description": "The URL type.", "maxLength": 100 },
                "value": { "type": "string", "description": "The URL value.", "maxLength": 4000 }
              }
            }
          },
          "remoteAppId": { 
            "type": "string", 
            "description": "Links this service to some remote application known to the client.", 
            "maxLength": 500 
          },
          "mobileServiceId": {
            "type": "string",
            "description": "Mobile service id.",
            "maxLength": 200
          },
          "federationConnectionWizard": {
            "type": "string",
            "maxLength": 255,
            "description": "Location of the federation connection set-up wizard.  e.g. salesforce, unauthenticated website, etc."
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether this service is synced back to cleartrust entitlements server, and therefore protected by the ct web agent."
          },
          "messagingEnabled": {
            "type": "boolean", 
            "description": "Indicates whether to perform messaging when this service is updated."
          }
        }
      }

  - packageGrant: |
      {
        "id" : "http://api.covisint.com/schema/packageGrant",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "type" : "object",
        "description" : "Representation of a package grant.",
        "properties" : {
          "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "status" : { 
            "type" : "string",
            "enum" : [ "active", "revoked", "expired" ],
            "description" : "The status of the grant.  Only required when grant is retrieved.  Not required when grant is created.",
            "required": false
          },
          "grantee": {
            "description": "The subject owning the grant",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },
          "servicePackage": {
            "description": "The granted package.",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          }
        }
      }
      
  - packageRequest: |
      {
        "id" : "http://api.covisint.com/schema/packageRequest",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a package request resource.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "requestor": { 
            "description": "The subject for which this request is being made",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },
          "servicePackage": {
            "description": "The package being requested.",
            "$ref": "http://api.covisint.com/schema/resourceReference#",
            "required": true
          },
          "reason": {
            "type": "string",
            "description": "The justification for the request.",
            "maxLength": 1000
          },
          "prerequisite": {
            "description": "The parent request, if applicable.",
            "extends": {
              "$ref": "http://api.covisint.com/schema/resourceReference#"
            }
          }
        }
      }      

  - package: |
      {
        "id" : "http://api.covisint.com/schema/service",
        "$schema" : "http://json-schema.org/draft-04/schema",
        "type" : "object",
        "description" : "Schema representing a package resource.",
        "extends" : {
              "$ref" : "http://api.covisint.com/schema/realmScopedResource#"
        },
        "properties" : {
          "id": {
           "maxLength" : 15
          }, 
          "version": {
            "description" : "The current version for this resource.  Exists once the resource has been saved. This is mandatory for PUT requests, but should not be supplied for POST requests. User supplied value will be ignored and will be set to the creation value."
          },
          "owningOrganization": {
            "description": "The organization that owns this package.",
            "$ref": "http://api.covisint.com/schema/resourceReference#"
          },
          "parent": {
            "description": "The parent package.  Used to create a package hierarchy.",
            "$ref": "http://api.covisint.com/schema/resourceReference#"
          },
          "codeRestrictions": {
            "type": "object",
            "description": "Indicates whether site/location code(s) must be specified when requesting/granting this package.",
            "properties": {
              "requestorType": {
                "type": "string",
                "enum": [ "person", "organization" ],
                "required": true
              },
              "restriction": {
                "type": "string",
                "enum": [ "site", "location" ],
                "required": true
              }
            }
          },
          "termsAndConditions": {
            "type": "array",
            "minItems": 1,
            "items": {
            "type": "object",
              "properties": {
                "type": { 
                  "type": "string", 
                  "enum": [ "person", "organization" ],
                  "description": "The target entity of the terms and conditions."
                },
                "tacId": {
                  "type": "string", 
                  "description": "The identifier of the T&C record.",
                  "required": true,
                  "maxLength": 36
                }
              }
            }
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether this package is synced back to cleartrust entitlements server, and therefore protected by the ct web agent."
          },
          "requestable": {
            "type": "boolean",
            "description": "Indicates whether this package may be requested by persons or organizations."
          },
          "grantable": {
            "type": "boolean",
            "description": "Indicates whether this package may be granted to persons or organizations."
          },                                    
          "name" : {
            "type" : "array",
            "description": "Internationalized package names.",
            "required": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "lang": { "type": "string", "maxLength": 10 },
                "text": { "type": "string", "maxLength": 2000 }
              }
            }
          },
          "category" : {
            "type" : "array",
            "description": "Internationalized category names.",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "lang": { "type": "string", "maxLength": 10 },
                "text": { "type": "string", "maxLength": 2000 }
              }
            }
          }
        }
      }
     
        
  traits:
#common-traits
              
  /services:
    is: [secured]
    description: collection endpoint for service resources
    get:
      is: [getResponse]
      description: Performs a search for service resources.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.service.v1+json.
          type: string
          required: true
      queryParameters:
        id:
          description: Filter the search results by the given id.  May provide an array of ids.
          type: string
          maxLength: 36
          required: false
        name: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 300
          required: false
        category: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 300
          required: false          
        owningOrganizationId:
          description: Filter the search results by the given owner organization id.
          type: string
          maxLength: 36
          required: false
        remoteApplicationId:
          description: Filter the search results by given remote application id.
          type: string
          maxLength: 36
          required: false
        mobileServiceId:
          description: Filter the search results by given mobile service id.
          type: string
          maxLength: 36
          required: false
        sortBy:
          description: Sort the search results.
          type: string
          required: false
          enum: [ "creation" ]
      responses:
        200:
          description: All services that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.service.v1+json:
              schema: service
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
    /{id}:
      uriParameters:
        id:
          description: Unique identifier of the service
          type: string
          maxLength: 36
          required: true
      is: [secured]
      description: individual resource endpoint for services
      
      get:
        is: [getResponse]
        description: Returns the service by its unique id.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.service.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The service was successfully retrieved
            body:
              application/vnd.com.covisint.platform.service.v1+json:
                schema: service
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      put:
        is: [putResponse]
        description: Updates a service, creating one when it doesn't exist.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.service.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.service.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.service.v1+json:
            schema: service
        responses:
          200:
            description: The service was successfully updated
            body:
              application/vnd.com.covisint.platform.service.v1+json:
                schema: service
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
  /packages:
    is: [secured]
    description: collection endpoint for package resources
    get:
      is: [getResponse]
      description: Performs a search for package resources.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.v1+json.
          type: string
          required: true
      queryParameters:
        name: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 36
          required: false
        category: 
          description: Retrieve only packages with the specified name.  The search is case-insensitve.  Multiple parameters are supported and the search results will be a union.
          type: string
          maxLength: 36
          required: false
        owningOrganizationId: 
          description: Filter packages by the id of the owning organization.
          type: string
          maxLength: 36
          required: false
        parentPackageId: 
          description: Filter packages by the id of their parent package.
          type: string
          maxLength: 36
          required: false
        sortBy:
          description: Sort the search results.
          type: string
          required: false
          enum: [ "creation" ]
      responses:
        200:
          description: All packages that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.package.v1+json:
              schema: package
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    /{id}:
      description: individual resource endpoint for packages. 
      uriParameters:
        id:
          description: Unique identifier of the package
          type: string
          maxLength: 36
          required: true
      is: [secured]
      
      get:
        is: [getResponse]
        description: Returns the package by its id.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The package was successfully retrieved
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      put:
        is: [putResponse]
        description: Updates a package, creating one when it doesn't exist.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.v1+json:
            schema: package
        responses:
          200:
            description: The package was successfully updated
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                
      post:
        is: [postResponse]
        description: Creates a new package.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.v1+json:
            schema: package
        responses:
          200:
            description: The package was successfully created
            body:
              application/vnd.com.covisint.platform.package.v1+json:
                schema: package
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request
            # framework:request:io
            # framework:request:io:read - 
            # framework:request:io:read:parsing
            # framework:request:io:write
            # framework:request:header:missing - Missing request header: {headerName}
            # framework:request:param:missing - Missing request parameter: {queryParameterName}
            # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
            # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName}
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]            
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
      /services:   
        description: collection endpoints for the services that are members of this package.
        is: [secured]
        
        get:
          is: [getResponse]
          description: get the services that are members of this package.
          headers:
            Accept:
              description: Media type.
              example: application/vnd.com.covisint.platform.service.v1+json.
              type: string
              required: true
          responses:
            200:
              description: the services were successfully retrieved.
              body:
                application/vnd.com.covisint.platform.service.v1+json:
                  schema: service
            400:
              description: There was a problem with the client's request
              # substatus codes are mentioned below:
              # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]      
        /{id}:
          description: used to add and remove service membership from a package.
          uriParameters:
            id:
              description: Unique identifier of the service
              type: string
              maxLength: 36
              required: true
          is: [secured]
      
          put:  
            is: [putResponse]
            description: Adds the service into the package.
            headers:
            responses:
              204:
                description: The service was successfully added to the package.
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                body:
                  application/vnd.com.covisint.error.v1+json:
                    schema: errorResponseSchema
                  
          delete:
            is: [deleteResponse]
            description: Removes the service from the package.
            headers:
            responses:
              204:
                description: The service was successfully removed from the package.
              400:
                description: There was a problem with the client's request
                # substatus codes are mentioned below:
                # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
                body:
                  application/vnd.com.covisint.error.v1+json:
                   schema: errorResponseSchema


  /persons/{personId}/packages:
    is: [secured]
    description: collection endpoint for user package grant resources
    uriParameters:
      personId: 
        description: The id of the person for whom this grant is being made.
        type: string
        maxLength: 36
        required: true
    get:
      is: [getResponse]
      description: Performs a search for a person's package grants.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes.
          type: string
          required: true
      responses:
        200:
          description: All package grants that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes:
              schema: packageGrant
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    
    /{packageId}:
      uriParameters:
        packageId:
          description: Unique identifier of the granted package.
          type: string
          maxLength: 36
          required: true
      is: [secured]
      description: individual resource endpoint for package grants
      
      get:
        is: [getResponse]
        description: Returns the package grant
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes.
            type: string
            required: true
        responses:
          200:
            description: The package grant was successfully retrieved
            body:
              application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes:
                schema: packageGrant
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      put:
        is: [putResponse]
        description: Grant (push) a package to a person.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.grant.v1+json:
            schema: packageGrant
        responses:
          200:
            description: The package grant was successfully created
            body:
              application/vnd.com.covisint.platform.package.grant.v1+json:
                schema: packageGrant
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            # service.package.id.not.found - Could not find service package id {packagId}
            # service.package.not.grantable - This package is not grantable.
          409:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:resource:conflict:grantee:type - Invalid grantee type. Expected {granteeType}
            # framework:resource:conflict:grantee:id - Invalid grantee id. Expected {granteeId}
            # framework:resource:conflict:servicePackage:id - Invalid service package id. Expected {servicePackageId}            
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
      delete:
        is: [deleteResponse]
        description: Revoke a package grant from a person.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: false
        responses:
          204:
            description: The package grant was successfully revoked
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]  
                  
  /organizations/{organizationId}/packages:
    is: [secured]
    description: collection endpoint for organization package grant resources
    uriParameters:
      organizationId: 
        description: The id of the organization for whom this grant is being made.
        type: string
        maxLength: 36
        required: true
    get:
      is: [getResponse]
      description: Performs a search for an organization's package grants.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes.
          type: string
          required: true
      responses:
        200:
          description: All package grants that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes:
              schema: packageGrant
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    
    /{packageId}:
      uriParameters:
        packageId:
          description: Unique identifier of the granted package.
          type: string
          maxLength: 36
          required: true
      is: [secured]
      description: individual resource endpoint for package grants
      
      get:
        is: [getResponse]
        description: Returns the package grant
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes.
            type: string
            required: true
        responses:
          200:
            description: The package grant was successfully retrieved
            body:
              application/vnd.com.covisint.platform.package.grant.v1+json;includeCodes:
                schema: packageGrant
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      put:
        is: [putResponse]
        description: Grant (push) a package to an organization.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: true
          Content-type:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: true
        body:
          application/vnd.com.covisint.platform.package.grant.v1+json:
            schema: packageGrant
        responses:
          200:
            description: The package grant was successfully created
            body:
              application/vnd.com.covisint.platform.package.grant.v1+json:
                schema: packageGrant
                
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            # service.package.id.not.found - Could not find service package id {packagId}
            # service.package.not.grantable - This package is not grantable.
          409:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:resource:conflict:grantee:type - Invalid grantee type. Expected {granteeType}
            # framework:resource:conflict:grantee:id - Invalid grantee id. Expected {granteeId}
            # framework:resource:conflict:servicePackage:id - Invalid service package id. Expected {servicePackageId}            
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
      delete:
        is: [deleteResponse]
        description: Revoke a package grant from an organization.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.grant.v1+json.
            type: string
            required: false
        responses:
          204:
            description: The package grant was successfully revoked
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
  /grants/tasks/suspend:
    is: [secured]
    description: used to suspend an existing service package grant.  if the grant is already suspended, then this operation has no effect.
    post:
      is: [postResponse]
      description: Suspends a service grant.
      headers:
      queryParameters:          
          granteeType: 
            description: The type of entity to which the grant belongs.  
            enum: [ person, organization ]
            required: true
            maxLength:  12
          grantee: 
            description: The unique identifier of the entity owning this grant.  This will either be an organization id or a person id, depending on the value of granteeType.
            type: string
            required: true
            maxLength:  36
          packageId: 
            description: The id of the granted package which is getting suspended.
            type: string
            required: true
            maxLength:  36
      responses:
        204:
          description: The service grant was successfully suspended
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
  /requests:
    is: [secured]
    description: collection endpoint for package request resources
    get:
      is: [getResponse]
      description: Performs a search for package requests.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.request.v1+json.
          type: string
          required: true
      queryParameters:
        requestor.id: 
          description: The subject requesting the package.
          type: string
          maxLength: 36
          required: false
        requestor.type: 
          description: The type of subject requesting the package.
          type: string
          enum: [ "person", "organization" ]
          required: false
      responses:
        200:
          description: All package requests that satisfy the query parameters were successfully retrieved (response collection may be empty).
          body:
            application/vnd.com.covisint.platform.package.request.v1+json:
              schema: packageRequest
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
    post:
      is: [postResponse]
      description: Creates a new request for a package.
      headers:
        Accept:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.request.v1+json.
          type: string
          required: true
        Content-Type:
          description: Media type.
          example: application/vnd.com.covisint.platform.package.request.v1+json.
          type: string
          required: true
      body:
        application/vnd.com.covisint.platform.package.request.v1+json:
          schema: packageRequest
      responses:
        200:
          description: The package request was successfully created
          body:
            application/vnd.com.covisint.platform.package.request.v1+json:
              schema: packageRequest
                
        400:
          description: There was a problem with the client's request
          # substatus codes are mentioned below:
          # framework:request
          # framework:request:io
          # framework:request:io:read - 
          # framework:request:io:read:parsing
          # framework:request:io:write
          # framework:request:header:missing - Missing request header: {headerName}
          # framework:request:param:missing - Missing request parameter: {queryParameterName}
          # framework:request:data:missing - The following information was missing from the resource: {resourceFieldName(s)}
          # framework:request:data:invalid - The following information should not be part of the resource: {resourceFieldName} 
          # service.package.not.found - The requested service package does not exist.
          # service.package.not.requestable - The requested service package was marked as non-requestable.
          # service.package.request.parent.id.not.found - The parent request id was not found.
          # requestor.type.invalid - Only person requestors are supported
          # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application] 
          body:
            application/vnd.com.covisint.error.v1+json:
              schema: errorResponseSchema
                
    /{id}:
      uriParameters:
        id:
          description: Unique identifier of the package request
          type: string
          maxLength: 36
          required: true
      is: [secured]
      description: individual resource endpoint for package requests
      
      get:
        is: [getResponse]
        description: Returns the package request
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.request.v1+json.
            type: string
            required: true
        responses:
          200:
            description: The package request was successfully retrieved
            body:
              application/vnd.com.covisint.platform.package.request.v1+json:
                schema: packageRequest
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]        
      delete:
        is: [deleteResponse]
        description: Deletes (cancels) an existing package request.
        headers:
          Accept:
            description: Media type.
            example: application/vnd.com.covisint.platform.package.request.v1+json.
            type: string
            required: false
        body:
          application/vnd.com.covisint.platform.package.request.v1+json:
            schema: packageRequest
        responses:
          204:
            description: The package request was successfully deleted
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]  
    /tasks/approve:
      is: [secured]
      description: endpoint used to approve package requests for person requestors.
      post:
        is: [postResponse]
        description: Approve a package request.
        headers:
        queryParameters:
          requestId:  
            description: the request id.
            type: string
            maxLength: 36
            required: true
          justification:  
            description: optional justification for the decision.
            type: string
            maxLength: 1000
            required: false
        responses:
          202:
            description: The approval decision was accepted and will be processed accordingly.  No response entity body.
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:header:missing - Missing request header: {headerName}
            # service.request.id.not.found- Could not find request id {requestId}
            # service.request.unsupported.requestor.type - Service package requests for persons are supported.  Other requestor types (organizations) are not supported.
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema
                
    /tasks/deny:
      is: [secured]
      description: endpoint used to reject package requests for person requestors.
      post:
        is: [postResponse]
        description: Deny a package request.
        headers:
        queryParameters:
          requestId:  
            description: the request id.
            type: string
            maxLength: 36
            required: true
          justification:  
            description: optional justification for the denial.
            type: string
            maxLength: 1000
            required: false
        responses:
          202:
            description: The denial decision was accepted and will be processed.  No response entity body.
          400:
            description: There was a problem with the client's request
            # substatus codes are mentioned below:
            # framework:request:header:missing - Missing request header: {headerName}
            # service.request.id.not.found- The service request does not exist.
            # service.request.unsupported.requestor.type - Service package requests for persons are supported.  Other requestor types (organizations) are not supported.
            # framework:request:invalid:header:value - Invalid x-requestor header value. Valid values are [person, application]
            body:
              application/vnd.com.covisint.error.v1+json:
                schema: errorResponseSchema              
  
  